{"ast":null,"code":"var _jsxFileName = \"/Users/chris/Documents/GitHub/music-player/src/App.js\",\n  _s = $RefreshSig$();\n// import react\nimport * as React from \"react\";\n\n// import styles\nimport \"./styles/app.scss\";\n\n// import data\nimport data from \"./data\";\n\n// import components\nimport Library from \"./components/Library\";\nimport Nav from \"./components/Nav\";\nimport Player from \"./components/Player\";\nimport Song from \"./components/Song\";\nimport { logEvent } from \"firebase/analytics\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  logEvent();\n  // !var States\n  const [songs, setSongs] = React.useState(data());\n  const [currentSong, setCurrentSong] = React.useState(songs[0]);\n  const [isPlaying, setIsPlaying] = React.useState(false);\n  const [songInfo, setSongInfo] = React.useState({\n    currentTime: 0,\n    duration: 0,\n    animationPercentage: 0\n  });\n  const [libraryStatus, setLibraryStatus] = React.useState(false);\n\n  // !exp Ref\n  const audioRef = React.useRef(null);\n  const timeUpdateHandler = e => {\n    // !exp currentTime and duration are audio element built in attributes (https://developer.mozilla.org/en-US/docs/Web/HTML/Element/audio)\n    const currentTime = e.target.currentTime;\n    const duration = e.target.duration;\n\n    // calculate percentage\n    const roundedCurrent = Math.round(currentTime);\n    const roundedDuration = Math.round(duration);\n    const animation = Math.round(roundedCurrent / roundedDuration * 100);\n    setSongInfo({\n      ...songInfo,\n      currentTime,\n      duration,\n      animationPercentage: animation\n    });\n  };\n  const songEndHandler = async () => {\n    let currentIndex = songs.findIndex(song => song.id === currentSong.id);\n    await setCurrentSong(songs[(currentIndex + 1) % songs.length]);\n    if (isPlaying) audioRef.current.play();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `App ${libraryStatus ? \"library-active\" : \"\"}`,\n    children: [/*#__PURE__*/_jsxDEV(Nav, {\n      libraryStatus: libraryStatus,\n      setLibraryStatus: setLibraryStatus\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Song, {\n      currentSong: currentSong\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Player, {\n      currentSong: currentSong,\n      isPlaying: isPlaying,\n      setIsPlaying: setIsPlaying,\n      audioRef: audioRef,\n      songInfo: songInfo,\n      setSongInfo: setSongInfo,\n      songs: songs,\n      setCurrentSong: setCurrentSong,\n      setSongs: setSongs\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Library, {\n      songs: songs,\n      setCurrentSong: setCurrentSong,\n      audioRef: audioRef,\n      isPlaying: isPlaying,\n      setSongs: setSongs,\n      libraryStatus: libraryStatus\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"audio\", {\n      //this event occurs when the time is updated\n      onTimeUpdate: timeUpdateHandler\n      //this event occurs when meta data is loaded\n      ,\n      onLoadedMetadata: timeUpdateHandler\n      //this passes this element as audioRef like document.querySelector\n      ,\n      ref: audioRef,\n      src: currentSong.audio,\n      onEnded: songEndHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"bGS8FoxhWUwDzibAGMIs6/YpRqQ=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","data","Library","Nav","Player","Song","logEvent","App","songs","setSongs","useState","currentSong","setCurrentSong","isPlaying","setIsPlaying","songInfo","setSongInfo","currentTime","duration","animationPercentage","libraryStatus","setLibraryStatus","audioRef","useRef","timeUpdateHandler","e","target","roundedCurrent","Math","round","roundedDuration","animation","songEndHandler","currentIndex","findIndex","song","id","length","current","play","audio"],"sources":["/Users/chris/Documents/GitHub/music-player/src/App.js"],"sourcesContent":["// import react\nimport * as React from \"react\";\n\n// import styles\nimport \"./styles/app.scss\";\n\n// import data\nimport data from \"./data\";\n\n// import components\nimport Library from \"./components/Library\";\nimport Nav from \"./components/Nav\";\nimport Player from \"./components/Player\";\nimport Song from \"./components/Song\";\n\nimport { logEvent } from \"firebase/analytics\";\n\nfunction App() {\n  logEvent();\n  // !var States\n  const [songs, setSongs] = React.useState(data());\n  const [currentSong, setCurrentSong] = React.useState(songs[0]);\n  const [isPlaying, setIsPlaying] = React.useState(false);\n  const [songInfo, setSongInfo] = React.useState({\n    currentTime: 0,\n    duration: 0,\n    animationPercentage: 0,\n  });\n  const [libraryStatus, setLibraryStatus] = React.useState(false);\n\n  // !exp Ref\n  const audioRef = React.useRef(null);\n\n  const timeUpdateHandler = (e) => {\n    // !exp currentTime and duration are audio element built in attributes (https://developer.mozilla.org/en-US/docs/Web/HTML/Element/audio)\n    const currentTime = e.target.currentTime;\n    const duration = e.target.duration;\n\n    // calculate percentage\n    const roundedCurrent = Math.round(currentTime);\n    const roundedDuration = Math.round(duration);\n    const animation = Math.round((roundedCurrent / roundedDuration) * 100);\n\n    setSongInfo({\n      ...songInfo,\n      currentTime,\n      duration,\n      animationPercentage: animation,\n    });\n  };\n\n  const songEndHandler = async () => {\n    let currentIndex = songs.findIndex((song) => song.id === currentSong.id);\n    await setCurrentSong(songs[(currentIndex + 1) % songs.length]);\n    if (isPlaying) audioRef.current.play();\n  };\n\n  return (\n    <div className={`App ${libraryStatus ? \"library-active\" : \"\"}`}>\n      <Nav libraryStatus={libraryStatus} setLibraryStatus={setLibraryStatus} />\n      <Song currentSong={currentSong} />\n      <Player\n        currentSong={currentSong}\n        isPlaying={isPlaying}\n        setIsPlaying={setIsPlaying}\n        audioRef={audioRef}\n        songInfo={songInfo}\n        setSongInfo={setSongInfo}\n        songs={songs}\n        setCurrentSong={setCurrentSong}\n        setSongs={setSongs}\n      />\n      <Library\n        songs={songs}\n        setCurrentSong={setCurrentSong}\n        audioRef={audioRef}\n        isPlaying={isPlaying}\n        setSongs={setSongs}\n        libraryStatus={libraryStatus}\n      />\n      <audio\n        //this event occurs when the time is updated\n        onTimeUpdate={timeUpdateHandler}\n        //this event occurs when meta data is loaded\n        onLoadedMetadata={timeUpdateHandler}\n        //this passes this element as audioRef like document.querySelector\n        ref={audioRef}\n        src={currentSong.audio}\n        onEnded={songEndHandler}\n      />\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}