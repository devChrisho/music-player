{"ast":null,"code":"var _jsxFileName = \"/Users/chris/Documents/GitHub/music-player/src/components/Library.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  default: LibrarySong\n} = require('./LibrarySong');\nconst Library = _ref => {\n  let {\n    songs,\n    setCurrentSong,\n    audioRef,\n    isPlaying,\n    setSongs,\n    libraryStatus\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `library ${libraryStatus ? 'active-library' : ''}`,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Library\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"library-songs\",\n      children: songs.map(song => /*#__PURE__*/_jsxDEV(LibrarySong, {\n        song: song,\n        songs: songs,\n        setCurrentSong: setCurrentSong,\n        audioRef: audioRef,\n        isPlaying: isPlaying,\n        id: song.id,\n        setSongs: setSongs\n      }, song.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n};\n_c = Library;\nexport default Library;\nvar _c;\n$RefreshReg$(_c, \"Library\");","map":{"version":3,"names":["default","LibrarySong","require","Library","songs","setCurrentSong","audioRef","isPlaying","setSongs","libraryStatus","map","song","id"],"sources":["/Users/chris/Documents/GitHub/music-player/src/components/Library.js"],"sourcesContent":["const { default: LibrarySong } = require('./LibrarySong');\n\nconst Library = ({\n  songs,\n  setCurrentSong,\n  audioRef,\n  isPlaying,\n  setSongs,\n  libraryStatus,\n}) => {\n  return (\n    <div className={`library ${libraryStatus ? 'active-library' : ''}`}>\n      <h2>Library</h2>\n      <div className='library-songs'>\n        {songs.map(song => (\n          <LibrarySong\n            song={song}\n            songs={songs}\n            setCurrentSong={setCurrentSong}\n            audioRef={audioRef}\n            isPlaying={isPlaying}\n            id={song.id}\n            setSongs={setSongs}\n            key={song.id}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default Library;\n"],"mappings":";;AAAA,MAAM;EAAEA,OAAO,EAAEC;AAAY,CAAC,GAAGC,OAAO,CAAC,eAAe,CAAC;AAEzD,MAAMC,OAAO,GAAG,QAOV;EAAA,IAPW;IACfC,KAAK;IACLC,cAAc;IACdC,QAAQ;IACRC,SAAS;IACTC,QAAQ;IACRC;EACF,CAAC;EACC,oBACE;IAAK,SAAS,EAAG,WAAUA,aAAa,GAAG,gBAAgB,GAAG,EAAG,EAAE;IAAA,wBACjE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAgB,eAChB;MAAK,SAAS,EAAC,eAAe;MAAA,UAC3BL,KAAK,CAACM,GAAG,CAACC,IAAI,iBACb,QAAC,WAAW;QACV,IAAI,EAAEA,IAAK;QACX,KAAK,EAAEP,KAAM;QACb,cAAc,EAAEC,cAAe;QAC/B,QAAQ,EAAEC,QAAS;QACnB,SAAS,EAAEC,SAAU;QACrB,EAAE,EAAEI,IAAI,CAACC,EAAG;QACZ,QAAQ,EAAEJ;MAAS,GACdG,IAAI,CAACC,EAAE;QAAA;QAAA;QAAA;MAAA,QAEf;IAAC;MAAA;MAAA;MAAA;IAAA,QACE;EAAA;IAAA;IAAA;IAAA;EAAA,QACF;AAEV,CAAC;AAAC,KA3BIT,OAAO;AA6Bb,eAAeA,OAAO;AAAC;AAAA"},"metadata":{},"sourceType":"module"}