{"ast":null,"code":"var _jsxFileName = \"/Users/chris/Documents/GitHub/music-player/src/components/Player.js\";\nimport * as Fa from 'react-icons/fa';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Player = _ref => {\n  let {\n    currentSong,\n    isPlaying,\n    setIsPlaying,\n    audioRef,\n    songInfo,\n    setSongInfo,\n    songs,\n    setCurrentSong,\n    setSongs\n  } = _ref;\n  const activeLibraryHandler = nextPrev => {\n    const newSongs = songs.map(song => {\n      if (song.id === nextPrev.id) {\n        return {\n          ...song,\n          active: true\n        };\n      } else {\n        return {\n          ...song,\n          active: false\n        };\n      }\n    });\n    setSongs(newSongs);\n    if (isPlaying) audioRef.current.play();\n  };\n\n  // !exp Event handlers\n  const playSongHandler = () => {\n    if (isPlaying) {\n      audioRef.current.pause();\n      setIsPlaying(!isPlaying);\n    } else {\n      audioRef.current.play();\n      setIsPlaying(!isPlaying);\n    }\n  };\n  const dragHandler = e => {\n    audioRef.current.currentTime = e.target.value;\n    setSongInfo({\n      ...songInfo,\n      currentTime: e.target.value\n    });\n  };\n  const skipTrackHandler = async direction => {\n    let currentIndex = songs.findIndex(song => song.id === currentSong.id);\n    if (direction === 'skip-forward') {\n      await setCurrentSong(songs[(currentIndex + 1) % songs.length]);\n      activeLibraryHandler(songs[(currentIndex + 1) % songs.length]);\n    } else if (direction === 'skip-back') {\n      if ((currentIndex - 1) % songs.length === -1) {\n        await setCurrentSong(songs[songs.length - 1]);\n        activeLibraryHandler(songs[songs.length - 1]);\n        if (isPlaying) audioRef.current.play();\n        return;\n      }\n      await setCurrentSong(songs[(currentIndex - 1) % songs.length]);\n      activeLibraryHandler(songs[(currentIndex - 1) % songs.length]);\n    }\n  };\n\n  // !exp ultility functions\n  // this converts the seconds into minutes and seconds format\n  const getTime = time => {\n    const minutes = Math.floor(time / 60);\n    const seconds = Math.floor(time % 60);\n    // padStart will fill the string with '0' for 2 spaces, and then apply {seconds} at the end\n    const secondsWithZero = String(seconds).padStart(2, '0');\n    return `${minutes}:${secondsWithZero}`;\n  };\n\n  // Add the styles\n  const trackAnim = {\n    transform: `translateX(${songInfo.animationPercentage}%)`\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"player-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"time-control\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: getTime(songInfo.currentTime)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          background: `linear-gradient(to right, \n          ${currentSong.color[0]}, \n          ${currentSong.color[1]}\n        )`\n        },\n        className: \"track\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"range\",\n          min: 0,\n          max: songInfo.duration || 0,\n          value: songInfo.currentTime,\n          onChange: dragHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: trackAnim,\n          className: \"animate-track\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: getTime(songInfo.duration || 0)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"play-control\",\n      children: [/*#__PURE__*/_jsxDEV(Fa.FaAngleLeft, {\n        onClick: () => {\n          skipTrackHandler('skip-back');\n        },\n        size: \"1rem\",\n        className: \"skip-backward\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this), isPlaying ? /*#__PURE__*/_jsxDEV(Fa.FaPause, {\n        onClick: playSongHandler,\n        size: \"1rem\",\n        className: \"play\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(Fa.FaPlay, {\n        onClick: playSongHandler,\n        size: \"1rem\",\n        className: \"pause\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Fa.FaAngleRight, {\n        onClick: () => {\n          skipTrackHandler('skip-forward');\n        },\n        size: \"1rem\",\n        className: \"skip-forward\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n};\n_c = Player;\nexport default Player;\nvar _c;\n$RefreshReg$(_c, \"Player\");","map":{"version":3,"names":["Fa","Player","currentSong","isPlaying","setIsPlaying","audioRef","songInfo","setSongInfo","songs","setCurrentSong","setSongs","activeLibraryHandler","nextPrev","newSongs","map","song","id","active","current","play","playSongHandler","pause","dragHandler","e","currentTime","target","value","skipTrackHandler","direction","currentIndex","findIndex","length","getTime","time","minutes","Math","floor","seconds","secondsWithZero","String","padStart","trackAnim","transform","animationPercentage","background","color","duration"],"sources":["/Users/chris/Documents/GitHub/music-player/src/components/Player.js"],"sourcesContent":["import * as Fa from 'react-icons/fa';\n\nconst Player = ({\n  currentSong,\n  isPlaying,\n  setIsPlaying,\n  audioRef,\n  songInfo,\n  setSongInfo,\n  songs,\n  setCurrentSong,\n  setSongs,\n}) => {\n  const activeLibraryHandler = nextPrev => {\n    const newSongs = songs.map(song => {\n      if (song.id === nextPrev.id) {\n        return { ...song, active: true };\n      } else {\n        return { ...song, active: false };\n      }\n    });\n\n    setSongs(newSongs);\n    if (isPlaying) audioRef.current.play();\n  };\n\n  // !exp Event handlers\n  const playSongHandler = () => {\n    if (isPlaying) {\n      audioRef.current.pause();\n      setIsPlaying(!isPlaying);\n    } else {\n      audioRef.current.play();\n      setIsPlaying(!isPlaying);\n    }\n  };\n\n  const dragHandler = e => {\n    audioRef.current.currentTime = e.target.value;\n    setSongInfo({ ...songInfo, currentTime: e.target.value });\n  };\n\n  const skipTrackHandler = async direction => {\n    let currentIndex = songs.findIndex(song => song.id === currentSong.id);\n    if (direction === 'skip-forward') {\n      await setCurrentSong(songs[(currentIndex + 1) % songs.length]);\n      activeLibraryHandler(songs[(currentIndex + 1) % songs.length]);\n    } else if (direction === 'skip-back') {\n      if ((currentIndex - 1) % songs.length === -1) {\n        await setCurrentSong(songs[songs.length - 1]);\n        activeLibraryHandler(songs[songs.length - 1]);\n        if (isPlaying) audioRef.current.play();\n        return;\n      }\n      await setCurrentSong(songs[(currentIndex - 1) % songs.length]);\n      activeLibraryHandler(songs[(currentIndex - 1) % songs.length]);\n    }\n  };\n\n  // !exp ultility functions\n  // this converts the seconds into minutes and seconds format\n  const getTime = time => {\n    const minutes = Math.floor(time / 60);\n    const seconds = Math.floor(time % 60);\n    // padStart will fill the string with '0' for 2 spaces, and then apply {seconds} at the end\n    const secondsWithZero = String(seconds).padStart(2, '0');\n    return `${minutes}:${secondsWithZero}`;\n  };\n\n  // Add the styles\n  const trackAnim = {\n    transform: `translateX(${songInfo.animationPercentage}%)`,\n  };\n\n  return (\n    <div className='player-container'>\n      <div className='time-control'>\n        <p>{getTime(songInfo.currentTime)}</p>\n        <div\n          style={{\n            background: `linear-gradient(to right, \n          ${currentSong.color[0]}, \n          ${currentSong.color[1]}\n        )`,\n          }}\n          className='track'\n        >\n          <input\n            type='range'\n            min={0}\n            max={songInfo.duration || 0}\n            value={songInfo.currentTime}\n            onChange={dragHandler}\n          />\n          <div style={trackAnim} className='animate-track'></div>\n        </div>\n        <p>{getTime(songInfo.duration || 0)}</p>\n      </div>\n      <div className='play-control'>\n        <Fa.FaAngleLeft\n          onClick={() => {\n            skipTrackHandler('skip-back');\n          }}\n          size='1rem'\n          className='skip-backward'\n        />\n        {isPlaying ? (\n          <Fa.FaPause onClick={playSongHandler} size='1rem' className='play' />\n        ) : (\n          <Fa.FaPlay onClick={playSongHandler} size='1rem' className='pause' />\n        )}\n\n        <Fa.FaAngleRight\n          onClick={() => {\n            skipTrackHandler('skip-forward');\n          }}\n          size='1rem'\n          className='skip-forward'\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default Player;\n"],"mappings":";AAAA,OAAO,KAAKA,EAAE,MAAM,gBAAgB;AAAC;AAErC,MAAMC,MAAM,GAAG,QAUT;EAAA,IAVU;IACdC,WAAW;IACXC,SAAS;IACTC,YAAY;IACZC,QAAQ;IACRC,QAAQ;IACRC,WAAW;IACXC,KAAK;IACLC,cAAc;IACdC;EACF,CAAC;EACC,MAAMC,oBAAoB,GAAGC,QAAQ,IAAI;IACvC,MAAMC,QAAQ,GAAGL,KAAK,CAACM,GAAG,CAACC,IAAI,IAAI;MACjC,IAAIA,IAAI,CAACC,EAAE,KAAKJ,QAAQ,CAACI,EAAE,EAAE;QAC3B,OAAO;UAAE,GAAGD,IAAI;UAAEE,MAAM,EAAE;QAAK,CAAC;MAClC,CAAC,MAAM;QACL,OAAO;UAAE,GAAGF,IAAI;UAAEE,MAAM,EAAE;QAAM,CAAC;MACnC;IACF,CAAC,CAAC;IAEFP,QAAQ,CAACG,QAAQ,CAAC;IAClB,IAAIV,SAAS,EAAEE,QAAQ,CAACa,OAAO,CAACC,IAAI,EAAE;EACxC,CAAC;;EAED;EACA,MAAMC,eAAe,GAAG,MAAM;IAC5B,IAAIjB,SAAS,EAAE;MACbE,QAAQ,CAACa,OAAO,CAACG,KAAK,EAAE;MACxBjB,YAAY,CAAC,CAACD,SAAS,CAAC;IAC1B,CAAC,MAAM;MACLE,QAAQ,CAACa,OAAO,CAACC,IAAI,EAAE;MACvBf,YAAY,CAAC,CAACD,SAAS,CAAC;IAC1B;EACF,CAAC;EAED,MAAMmB,WAAW,GAAGC,CAAC,IAAI;IACvBlB,QAAQ,CAACa,OAAO,CAACM,WAAW,GAAGD,CAAC,CAACE,MAAM,CAACC,KAAK;IAC7CnB,WAAW,CAAC;MAAE,GAAGD,QAAQ;MAAEkB,WAAW,EAAED,CAAC,CAACE,MAAM,CAACC;IAAM,CAAC,CAAC;EAC3D,CAAC;EAED,MAAMC,gBAAgB,GAAG,MAAMC,SAAS,IAAI;IAC1C,IAAIC,YAAY,GAAGrB,KAAK,CAACsB,SAAS,CAACf,IAAI,IAAIA,IAAI,CAACC,EAAE,KAAKd,WAAW,CAACc,EAAE,CAAC;IACtE,IAAIY,SAAS,KAAK,cAAc,EAAE;MAChC,MAAMnB,cAAc,CAACD,KAAK,CAAC,CAACqB,YAAY,GAAG,CAAC,IAAIrB,KAAK,CAACuB,MAAM,CAAC,CAAC;MAC9DpB,oBAAoB,CAACH,KAAK,CAAC,CAACqB,YAAY,GAAG,CAAC,IAAIrB,KAAK,CAACuB,MAAM,CAAC,CAAC;IAChE,CAAC,MAAM,IAAIH,SAAS,KAAK,WAAW,EAAE;MACpC,IAAI,CAACC,YAAY,GAAG,CAAC,IAAIrB,KAAK,CAACuB,MAAM,KAAK,CAAC,CAAC,EAAE;QAC5C,MAAMtB,cAAc,CAACD,KAAK,CAACA,KAAK,CAACuB,MAAM,GAAG,CAAC,CAAC,CAAC;QAC7CpB,oBAAoB,CAACH,KAAK,CAACA,KAAK,CAACuB,MAAM,GAAG,CAAC,CAAC,CAAC;QAC7C,IAAI5B,SAAS,EAAEE,QAAQ,CAACa,OAAO,CAACC,IAAI,EAAE;QACtC;MACF;MACA,MAAMV,cAAc,CAACD,KAAK,CAAC,CAACqB,YAAY,GAAG,CAAC,IAAIrB,KAAK,CAACuB,MAAM,CAAC,CAAC;MAC9DpB,oBAAoB,CAACH,KAAK,CAAC,CAACqB,YAAY,GAAG,CAAC,IAAIrB,KAAK,CAACuB,MAAM,CAAC,CAAC;IAChE;EACF,CAAC;;EAED;EACA;EACA,MAAMC,OAAO,GAAGC,IAAI,IAAI;IACtB,MAAMC,OAAO,GAAGC,IAAI,CAACC,KAAK,CAACH,IAAI,GAAG,EAAE,CAAC;IACrC,MAAMI,OAAO,GAAGF,IAAI,CAACC,KAAK,CAACH,IAAI,GAAG,EAAE,CAAC;IACrC;IACA,MAAMK,eAAe,GAAGC,MAAM,CAACF,OAAO,CAAC,CAACG,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC;IACxD,OAAQ,GAAEN,OAAQ,IAAGI,eAAgB,EAAC;EACxC,CAAC;;EAED;EACA,MAAMG,SAAS,GAAG;IAChBC,SAAS,EAAG,cAAapC,QAAQ,CAACqC,mBAAoB;EACxD,CAAC;EAED,oBACE;IAAK,SAAS,EAAC,kBAAkB;IAAA,wBAC/B;MAAK,SAAS,EAAC,cAAc;MAAA,wBAC3B;QAAA,UAAIX,OAAO,CAAC1B,QAAQ,CAACkB,WAAW;MAAC;QAAA;QAAA;QAAA;MAAA,QAAK,eACtC;QACE,KAAK,EAAE;UACLoB,UAAU,EAAG;AACzB,YAAY1C,WAAW,CAAC2C,KAAK,CAAC,CAAC,CAAE;AACjC,YAAY3C,WAAW,CAAC2C,KAAK,CAAC,CAAC,CAAE;AACjC;QACU,CAAE;QACF,SAAS,EAAC,OAAO;QAAA,wBAEjB;UACE,IAAI,EAAC,OAAO;UACZ,GAAG,EAAE,CAAE;UACP,GAAG,EAAEvC,QAAQ,CAACwC,QAAQ,IAAI,CAAE;UAC5B,KAAK,EAAExC,QAAQ,CAACkB,WAAY;UAC5B,QAAQ,EAAEF;QAAY;UAAA;UAAA;UAAA;QAAA,QACtB,eACF;UAAK,KAAK,EAAEmB,SAAU;UAAC,SAAS,EAAC;QAAe;UAAA;UAAA;UAAA;QAAA,QAAO;MAAA;QAAA;QAAA;QAAA;MAAA,QACnD,eACN;QAAA,UAAIT,OAAO,CAAC1B,QAAQ,CAACwC,QAAQ,IAAI,CAAC;MAAC;QAAA;QAAA;QAAA;MAAA,QAAK;IAAA;MAAA;MAAA;MAAA;IAAA,QACpC,eACN;MAAK,SAAS,EAAC,cAAc;MAAA,wBAC3B,QAAC,EAAE,CAAC,WAAW;QACb,OAAO,EAAE,MAAM;UACbnB,gBAAgB,CAAC,WAAW,CAAC;QAC/B,CAAE;QACF,IAAI,EAAC,MAAM;QACX,SAAS,EAAC;MAAe;QAAA;QAAA;QAAA;MAAA,QACzB,EACDxB,SAAS,gBACR,QAAC,EAAE,CAAC,OAAO;QAAC,OAAO,EAAEiB,eAAgB;QAAC,IAAI,EAAC,MAAM;QAAC,SAAS,EAAC;MAAM;QAAA;QAAA;QAAA;MAAA,QAAG,gBAErE,QAAC,EAAE,CAAC,MAAM;QAAC,OAAO,EAAEA,eAAgB;QAAC,IAAI,EAAC,MAAM;QAAC,SAAS,EAAC;MAAO;QAAA;QAAA;QAAA;MAAA,QACnE,eAED,QAAC,EAAE,CAAC,YAAY;QACd,OAAO,EAAE,MAAM;UACbO,gBAAgB,CAAC,cAAc,CAAC;QAClC,CAAE;QACF,IAAI,EAAC,MAAM;QACX,SAAS,EAAC;MAAc;QAAA;QAAA;QAAA;MAAA,QACxB;IAAA;MAAA;MAAA;MAAA;IAAA,QACE;EAAA;IAAA;IAAA;IAAA;EAAA,QACF;AAEV,CAAC;AAAC,KAxHI1B,MAAM;AA0HZ,eAAeA,MAAM;AAAC;AAAA"},"metadata":{},"sourceType":"module"}