{"ast":null,"code":"var _jsxFileName = \"/Users/chris/Documents/GitHub/music-player/src/components/LibrarySong.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LibrarySong = _ref => {\n  let {\n    song,\n    songs,\n    setCurrentSong,\n    audioRef,\n    isPlaying,\n    id,\n    setSongs\n  } = _ref;\n  const songSelectHandler = async () => {\n    await setCurrentSong(song);\n\n    // add active state\n    const newSongs = songs.map(song => {\n      if (song.id === id) {\n        return {\n          ...song,\n          active: true\n        };\n      } else {\n        return {\n          ...song,\n          active: false\n        };\n      }\n    });\n    setSongs(newSongs);\n    if (isPlaying) audioRef.current.play();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    onClick: songSelectHandler,\n    className: `library-song ${song.active ? 'selected' : ''}`,\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: song.cover,\n      alt: song.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"song-description\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: song.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: song.artist\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n_c = LibrarySong;\nexport default LibrarySong;\nvar _c;\n$RefreshReg$(_c, \"LibrarySong\");","map":{"version":3,"names":["LibrarySong","song","songs","setCurrentSong","audioRef","isPlaying","id","setSongs","songSelectHandler","newSongs","map","active","current","play","cover","name","artist"],"sources":["/Users/chris/Documents/GitHub/music-player/src/components/LibrarySong.js"],"sourcesContent":["const LibrarySong = ({\n  song,\n  songs,\n  setCurrentSong,\n  audioRef,\n  isPlaying,\n  id,\n  setSongs,\n}) => {\n  const songSelectHandler = async () => {\n    await setCurrentSong(song);\n\n    // add active state\n    const newSongs = songs.map(song => {\n      if (song.id === id) {\n        return { ...song, active: true };\n      } else {\n        return { ...song, active: false };\n      }\n    });\n\n    setSongs(newSongs);\n\n    if (isPlaying) audioRef.current.play();\n  };\n  return (\n    <div\n      onClick={songSelectHandler}\n      className={`library-song ${song.active ? 'selected' : ''}`}\n    >\n      <img src={song.cover} alt={song.name} />\n      <div className='song-description'>\n        <h3>{song.name}</h3>\n        <h4>{song.artist}</h4>\n      </div>\n    </div>\n  );\n};\n\nexport default LibrarySong;\n"],"mappings":";;AAAA,MAAMA,WAAW,GAAG,QAQd;EAAA,IARe;IACnBC,IAAI;IACJC,KAAK;IACLC,cAAc;IACdC,QAAQ;IACRC,SAAS;IACTC,EAAE;IACFC;EACF,CAAC;EACC,MAAMC,iBAAiB,GAAG,YAAY;IACpC,MAAML,cAAc,CAACF,IAAI,CAAC;;IAE1B;IACA,MAAMQ,QAAQ,GAAGP,KAAK,CAACQ,GAAG,CAACT,IAAI,IAAI;MACjC,IAAIA,IAAI,CAACK,EAAE,KAAKA,EAAE,EAAE;QAClB,OAAO;UAAE,GAAGL,IAAI;UAAEU,MAAM,EAAE;QAAK,CAAC;MAClC,CAAC,MAAM;QACL,OAAO;UAAE,GAAGV,IAAI;UAAEU,MAAM,EAAE;QAAM,CAAC;MACnC;IACF,CAAC,CAAC;IAEFJ,QAAQ,CAACE,QAAQ,CAAC;IAElB,IAAIJ,SAAS,EAAED,QAAQ,CAACQ,OAAO,CAACC,IAAI,EAAE;EACxC,CAAC;EACD,oBACE;IACE,OAAO,EAAEL,iBAAkB;IAC3B,SAAS,EAAG,gBAAeP,IAAI,CAACU,MAAM,GAAG,UAAU,GAAG,EAAG,EAAE;IAAA,wBAE3D;MAAK,GAAG,EAAEV,IAAI,CAACa,KAAM;MAAC,GAAG,EAAEb,IAAI,CAACc;IAAK;MAAA;MAAA;MAAA;IAAA,QAAG,eACxC;MAAK,SAAS,EAAC,kBAAkB;MAAA,wBAC/B;QAAA,UAAKd,IAAI,CAACc;MAAI;QAAA;QAAA;QAAA;MAAA,QAAM,eACpB;QAAA,UAAKd,IAAI,CAACe;MAAM;QAAA;QAAA;QAAA;MAAA,QAAM;IAAA;MAAA;MAAA;MAAA;IAAA,QAClB;EAAA;IAAA;IAAA;IAAA;EAAA,QACF;AAEV,CAAC;AAAC,KArCIhB,WAAW;AAuCjB,eAAeA,WAAW;AAAC;AAAA"},"metadata":{},"sourceType":"module"}